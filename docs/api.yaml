swagger: "2.0"
info:
  version: "1.0.0"
  title: "Fast & Furious cinema"
  description: "Backend API documentation for Fast & Furious cinema"
host: "api.example.com"
basePath: "/api"
schemes:
  - "http"

securityDefinitions:
  basicAuth:
    type: basic

paths:
  /catalog:
    get:
      summary: "Get movie catalog for this cinema"
      responses:
        200:
          description: "List of movie catalog entries"
          schema:
            type: array
            items:
              $ref: "#/definitions/MovieCatalogEntryResponse"
  /catalog/{movie_catalog_id}/rating:
    post:
      summary: "Rate movie from the catalog"
      security:
        - basicAuth: [ ]
      parameters:
        - in: path
          name: movie_catalog_id
          type: string
          format: uuid
          required: true
        - in: body
          name: CreateMovieRatingRequest
          schema:
            $ref: "#/definitions/CreateMovieRatingRequest"
      responses:
        201:
          description: "Rating has been created"
          schema:
            $ref: "#/definitions/MovieRatingResponse"
        400:
          description: "This user already rated this movie. Consider using PUT method on the same endpoint to update rating for this user"
        401:
          description: "Client is not authorized"
    put:
      summary: "Change rating for given movie"
      security:
        - basicAuth: [ ]
      parameters:
        - in: path
          name: movie_catalog_id
          type: string
          format: uuid
          required: true
        - in: body
          name: CreateMovieRatingRequest
          schema:
            $ref: "#/definitions/CreateMovieRatingRequest"
      responses:
        200:
          description: "Rating has been modified"
          schema:
            $ref: "#/definitions/MovieRatingResponse"
        401:
          description: "Client is not authorized"

  /showtimes:
    post:
      summary: "Create movie showtime"
      security:
        - basicAuth: []
      parameters:
        - in: body
          name: CreateShowtimeRequest
          schema:
            $ref: "#/definitions/CreateShowtimeRequest"
      responses:
        201:
          description: "Showtime created"
          schema:
            $ref: "#/definitions/ShowtimeResponse"
        401:
          description: "Client is not authorized"
    get:
      summary: "Get a list of showtimes"
      parameters:
        - in: query
          name: movie_id
          type: string
          format: uuid
        - in: query
          name: date_start_gte
          type: string
          format: date-time
        - in: query
          name: date_start_lte
          type: string
          format: date-time
      responses:
        200:
          description: "List of showtimes that match the given criteria or an empty list if no matching items are found"
          schema:
            type: array
            items:
              $ref: "#/definitions/ShowtimeResponse"
        401:
          description: "Client is not authorized"

  /showtimes/{showtime_id}:
    patch:
      summary: "Modify movie showtime"
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: showtime_id
          type: string
          format: uuid
          required: true
        - in: body
          name: UpdateShowtimeRequest
          schema:
            $ref: "#/definitions/UpdateShowtimeRequest"
      responses:
        200:
          description: "Showtime has been updated"
          schema:
            $ref: "#/definitions/ShowtimeResponse"
        400:
          description: "At least one property needs to be modified"
        401:
          description: "Client is not authorized"
        404:
          description: "Showtime with given ID was not found"
    delete:
      summary: "Delete movie showtime"
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: showtime_id
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: "Showtime has been deleted"
        401:
          description: "Client is not authorized"
        404:
          description: "Showtime with given ID was not found"

  /movies/{movie_id}:
    get:
      summary: "Get movie details"
      parameters:
        - in: path
          name: movie_id
          type: string
          format: imdb-id
          required: true
      responses:
        200:
          description: "Details of given movie"
          schema:
            $ref: "#/definitions/MovieResponse"
        401:
          description: "Client is not authorized"
        404:
          description: "Movie with given ID was not found"

definitions:
  MovieCatalogEntryResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      movie_id:
        type: string
        format: uuid
      title:
        description: "Movie title"
        type: string
      price:
        type: object
        $ref: "#/definitions/Price"
      rating:
        type: object
        $ref: "#/definitions/Rating"

  Price:
    type: object
    properties:
      amount:
        type: string
        format: "decimal"
      currency:
        type: string
        enum: ["EUR", "USD"]
    required:
      - amount
      - currency

  Rating:
    type: object
    properties:
      average:
        type: string
        format: decimal
      count:
        type: integer

  ShowtimeResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      movie_id:
        type: string
        format: uuid
      title:
        type: string
      date_start:
        type: string
        format: date-time
      date_end:
        type: string
        format: date-time
      price:
        $ref: "#/definitions/Price"
    required:
      - id
      - movie_id
      - title
      - date_start
      - date_end

  CreateShowtimeRequest:
    type: object
    properties:
      movie_catalog_id:
        type: string
        format: uuid
      date_start:
        type: string
        format: date-time
      date_end:
        type: string
        format: date-time
      price:
        $ref: "#/definitions/Price"
    required:
      - movie_catalog_id
      - date_start
      - date_end

  UpdateShowtimeRequest:
    type: object
    minProperties: 1
    properties:
      movie_catalog_id:
        type: string
        format: uuid
      date_start:
        type: string
        format: date-time
      date_end:
        type: string
        format: date-time
      price:
        $ref: "#/definitions/Price"

  MovieResponse:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      release_date:
        type: string
        format: date-time
      rating:
        type: string
        format: decimal
      imdb_rating:
        type: string
        format: decimal
      runtime:
        type: string
    required:
      - name
      - description
      - release_date
      - rating
      - imdb_rating
      - runtime

  CreateMovieRatingRequest:
    type: object
    properties:
      rating:
        type: integer
        minimum: 1
        maximum: 5
    required:
      - rating

  MovieRatingResponse:
    type: object
    properties:
      rating:
        description: "Rating created/edited by given user"
        type: string
        format: decimal
      new_movie_rating:
        type: object
        $ref: "#/definitions/Rating"
    required:
      - rating
      - new_avg_movie_rating
