[versions]
kotlin = "2.0.20"
serialization = "1.7.3"
reflect = "2.1.0"
coroutines = "1.9.0"
spring-boot = "3.4.0"
spring-dependency-management = "1.1.6"
junit = "2.1.0"
kotest = "6.0.0.M1"
mockk = "1.13.16"
okhttp = "4.12.0"
okhttp-coroutines = "5.0.0-alpha.14"
resilience4j = "2.2.0"
exposed = "0.57.0"
postgres-driver = "42.7.4"

[libraries]
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "reflect" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
resilience4j = { module = "io.github.resilience4j:resilience4j-spring-boot3", version.ref = "resilience4j" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-coroutines = { module = "com.squareup.okhttp3:okhttp-coroutines", version.ref = "okhttp-coroutines" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-spring-boot-starter = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed"}
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
postgres-driver = { module = "org.postgresql:postgresql", version.ref = "postgres-driver" }

# test only libs
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
junit = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "junit" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

[bundles]
kotlin = ["kotlinx-serialization", "kotlin-reflect", "kotlin-coroutines"]
spring = ["spring-boot-starter-web", "spring-boot-bom", "spring-boot-actuator", "spring-boot-starter-aop"]
exposed-spring = ["exposed-spring-boot-starter", "postgres-driver", "exposed-java-time"]
integration-test = ["junit", "spring-boot-starter-test", "mockk"]
kotest = ["kotest-runner", "kotest-assertions"]
